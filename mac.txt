Если на вашем  компьютере MacOs.
 
Чтобы проверить, установлен ли компилятор, в терминале напишите gcc, 
и система предложит установить xcode. Соглашаемся. Рбаота в терминале, 
за редким исключением, аналогична работе в терминале Ubuntu.

Для инсталляции новых пакетов можно установить  Homebrew:
напишите в терминале
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
Теперь можно использовать команду brew, например,
для установки файлового менеджера mc

brew install mc

или
 
brew install valgrind 

Последнее у меня к настоящему моменту не работает, и пришлось установить 
стороннюю сборку,

brew tap LouisBrunner/valgrind
brew install --HEAD LouisBrunner/valgrind/valgrind
brew upgrade --fetch-HEAD LouisBrunner/valgrind/valgrind

К сожалению, такой вариант у меня показывает ложные утечки, что, конечно, 
очень неприятно. Но для отслеживания ошибок распределения памяти это 
годится. Сами утечки тогда можно отслеживать также, как в Win, 
включением в проект файлов malloc.c или malloc.cpp (для С++) (их можно
найти на сайте лектора).

Для того, чтобы ваши проекты компилировались пакетным файлом wgcc (wg++),
его нужно поместить в папку usr/local/bin. Для этого используйте команду

cp ./wgcc /usr/local/bin

Перед тем, как забросить файл в эту папку, проверьте его работу 
локально, например,

./wgcc 1.c

(файлы wgcc и 1.c должны лежать в одной директории). Мне пришлось убрать 
некоторые ключи, забракованные Nac, видимо, из соображений безопасности,
отредактированные варианты можно найти в папке
https://github.com/mkondratieva/mac

Для редактирования кода можно использовать любой удобный редактор, 
например, sublime. Его надо скачать с официального сайта. Сейчас доступна версия
sublime Text 4. Есть версии и для других ОС.

Для меня намного проще оказалось использование виртуальной машины, 
чем работа в терминале Mac. Если ресурсы ноутбука позволяют, поставьте 
гостевую операционную систему Ubuntu (то же самое можно сделать и в Win).

Я поступала так. С официального сайта можно бесплатно сказать virtual box 6
(выбрала для Os X). Запускаем, даем требуемые разрешения.  Далее нужен 
образ гостевой операционной системы.
Скачиваем его бесплатно с официального сайта Ubuntu.  Я выбрала 
ubuntu 20.04 Desktop .iso (64-битная, размер около 2,7 gb). Теперь надо 
открыть  Virtual Box, нажать "создать машину", выбрать тип Linux, 
Ubuntu 64, остальное по умолчанию. После создания машины выбрать 
"настроить", перейти в носители и там добавить контроллер жестского 
диска(+), выбрать..., затем нажать создать и add, откроется окно, в 
котором надо выбрать папку, где вы сохранили скаченный образ ос Ubuntu.
Установка операционной системы займет некоторое время.

Если все получилось, вам нужно будет ввести логин и пароль, которые 
надо запомнить, т.к. они будут нужны для входа в систему и при подкачке 
пакетов.

Чтобы выключить машину, нужно закрыть окно Virtual Box 
(нажать на красный крестик в левом верхнем углу) и выбрать Power off.
Для включения виртуальной машины запустите Virtual Box, выберите
Ubuntu и  нажмите на кнопку "Запустить". 

Для работы в Ubuntu в основном используем терминал. Его можно запустить 
одновременным нажатием ctrl+alt+T или выбрать в меню программ. Закрыть 
можно командой exit либо нажатием мышкой на крестик (вверху справа).

Для установки компилятора наберите в терминале
sudo apt install build-essential
Все остальное, необходимое  для работе в Ubuntu, описано в этои документе 
https://github.com/mkondratieva/ubuntu/blob/main/ubuntu.txt
Для редактирования кода можно использовать редактор по умолчанию, 
который открывает файлы с  расширениями .c, .cpp, или скачать 
удобный для вас редактор (например, тот же   sublime для Linux)

Для обмена файлами между гостевой и основной ОС нужно создать общую папку. 
Сначала создайте эту папку (в основной ОС). Далее открываем virtual Box, 
жмём кнопку на панели инструментов  (в Мас эта панель находится не в окне 
программы, как в Win, а в вехней части рабочего стола)
с надписью "Настроить". Откроется окно настроек виртуальной машины. 
Выбираем раздел "Общие папки".  Справа жмём кнопку в виде папки 
с зеленым плюсом – это кнопка обзора для выбора папки.
Выбираем созданную папку, жмем открыть. В окошке добавления общей папки 
ставим  галочку на опции "Авто-подключение". Для безопасности
можно также  выбрать  "Только для чтения". При этом файлы, помещённые 
в общую папку в основной ОС, можно будет открывать или копировать в любое
другое место в гостевой ОС. А наполнять общую папку файлами гостевой ОС 
будет нельзя. Но я не делала таких ограничений. Жмём ОК. Запускаем 
виртуальную машину, заходим в систему. В меню окна VirtualBox (сверху) 
выбираем раздел "Devices", а в нём — команду "Insert Guest Additions CD 
Image" ("Подключить образ диска Дополнений гостевой ОС"). Будет 
примонтирован диск и система предложит установить дополнения. 
Соглашаемся и вводим пароль для установки дополнений. Ждем установки 
дополнений, после приглашения нажимаем Enter и перегружаем виртуальную 
машину.   Выбираем "Файл" (в колонке слева), и под корзиной находим 
находим общую папку (sf_...имя общей папки). Если видим ошибку 
"This location could not be displayed" ("Недостаточно прав для просмотра"),
нужно  добавить пользователя в группу vboxsf. 
Для этого открываем терминал и выполняем следующую команду:

sudo adduser marina vboxsf

Вместо marina пишите своего пользователя. Вводим пароль, и видим
сообщение Done. Перегружаем виртуальную машину и 
Проверяем открытие общей папки.  

 